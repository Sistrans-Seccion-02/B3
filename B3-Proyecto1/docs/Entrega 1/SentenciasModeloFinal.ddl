-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-10-21 17:56:49 COT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE bares (
    id_servicio INTEGER NOT NULL,
    nombre      VARCHAR2(255),
    estilo      VARCHAR2(255),
    capacidad   INTEGER
);

ALTER TABLE bares ADD CONSTRAINT bares_pk PRIMARY KEY ( id_servicio );

CREATE TABLE bebidasbares (
    id                INTEGER NOT NULL,
    nombre            VARCHAR2(255),
    costo             NUMBER,
    bares_id_servicio INTEGER NOT NULL
);

ALTER TABLE bebidasbares ADD CONSTRAINT bebidasbares_pk PRIMARY KEY ( id,
                                                                      bares_id_servicio );

CREATE TABLE consumos (
    id                          INTEGER NOT NULL,
    entrada_reservas_id_reserva INTEGER NOT NULL,
    habitaciones_nhabitacion    INTEGER NOT NULL,
    servicios_id_servicio       INTEGER NOT NULL
);

CREATE UNIQUE INDEX consumos__idx ON
    consumos (
        entrada_reservas_id_reserva
    ASC );

ALTER TABLE consumos ADD CONSTRAINT consumos_pk PRIMARY KEY ( id );

CREATE TABLE entradas (
    reservas_id_reserva INTEGER NOT NULL,
    usuarios_id_usuario INTEGER NOT NULL
);

ALTER TABLE entradas ADD CONSTRAINT entrada_pk PRIMARY KEY ( reservas_id_reserva );

CREATE TABLE gimnasios (
    id_servicio INTEGER NOT NULL,
    capacidad   INTEGER,
    nmaquinas   INTEGER,
    horainicio  VARCHAR2(255),
    horafinal   VARCHAR2(40)
);

ALTER TABLE gimnasios ADD CONSTRAINT gimnasio_pk PRIMARY KEY ( id_servicio );

CREATE TABLE habitaciones (
    nhabitacion    INTEGER NOT NULL,
    tipohabitacion VARCHAR2(255) NOT NULL
);

ALTER TABLE habitaciones ADD CONSTRAINT habitaciones_pk PRIMARY KEY ( nhabitacion );

CREATE TABLE planes (
    nombre      VARCHAR2(255) NOT NULL,
    descripcion VARCHAR2(255),
    descuento   NUMBER
);

ALTER TABLE planes ADD CONSTRAINT planes_pk PRIMARY KEY ( nombre );

CREATE TABLE platos (
    id                      INTEGER NOT NULL,
    nombre                  VARCHAR2(255),
    costo                   NUMBER,
    restaurante_id_servicio INTEGER NOT NULL
);

ALTER TABLE platos ADD CONSTRAINT platos_pk PRIMARY KEY ( id,
                                                          restaurante_id_servicio );

CREATE TABLE productos (
    id                        INTEGER NOT NULL,
    nombre                    VARCHAR2(255),
    costo                     NUMBER,
    supermercados_id_servicio INTEGER NOT NULL
);

ALTER TABLE productos ADD CONSTRAINT productos_pk PRIMARY KEY ( id,
                                                                supermercados_id_servicio );

CREATE TABLE reservas (
    id_reserva               INTEGER NOT NULL,
    numeropersonas           INTEGER,
    fechaentrada             VARCHAR2(255),
    fechasalida              VARCHAR2(255),
    usuarios_id_usuario      INTEGER NOT NULL,
    habitaciones_nhabitacion INTEGER NOT NULL,
    planes_nombre            VARCHAR2(255) NOT NULL
);

ALTER TABLE reservas ADD CONSTRAINT reservas_pk PRIMARY KEY ( id_reserva );

CREATE TABLE reservasservicio (
    id_reservaservicio       INTEGER NOT NULL,
    fecha                    VARCHAR2(100) NOT NULL,
    hora                     VARCHAR2(100) NOT NULL,
    servicios_id_servicio    INTEGER NOT NULL,
    habitaciones_nhabitacion INTEGER NOT NULL
);

ALTER TABLE reservasservicio ADD CONSTRAINT reservaservicio_pk PRIMARY KEY ( id_reservaservicio );

CREATE TABLE restaurantes (
    id_servicio INTEGER NOT NULL,
    nombre      VARCHAR2(255),
    capacidad   INTEGER,
    estilo      VARCHAR2(255)
);

ALTER TABLE restaurantes ADD CONSTRAINT restaurante_pk PRIMARY KEY ( id_servicio );

CREATE TABLE salidas (
    consumos_servicios_id_servicio INTEGER NOT NULL,
    pk_salidas                     INTEGER NOT NULL,
    usuarios_id_usuario            INTEGER NOT NULL,
    consumos_id                    INTEGER NOT NULL
);

ALTER TABLE salidas ADD CONSTRAINT salida_pk PRIMARY KEY ( pk_salidas );

CREATE TABLE salones (
    id_servicio INTEGER NOT NULL,
    capacidad   INTEGER,
    costo       NUMBER
);

ALTER TABLE salones ADD CONSTRAINT salones_pk PRIMARY KEY ( id_servicio );

CREATE TABLE servicios (
    id_servicio INTEGER NOT NULL,
    tipo        VARCHAR2(255)
);

ALTER TABLE servicios ADD CONSTRAINT servicios_pk PRIMARY KEY ( id_servicio );

CREATE TABLE spas (
    id_servicio INTEGER NOT NULL,
    nombre      VARCHAR2(255),
    costo       INTEGER,
    duracion    INTEGER
);

ALTER TABLE spas ADD CONSTRAINT spas_pk PRIMARY KEY ( id_servicio );

CREATE TABLE supermercados (
    id_servicio INTEGER NOT NULL,
    nombre      VARCHAR2(255)
);

ALTER TABLE supermercados ADD CONSTRAINT supermercados_pk PRIMARY KEY ( id_servicio );

CREATE TABLE tiposhabitacion (
    nombre    VARCHAR2(255) NOT NULL,
    dotacion  INTEGER,
    capacidad INTEGER
);

ALTER TABLE tiposhabitacion ADD CONSTRAINT tiposhabitacion_pk PRIMARY KEY ( nombre );

CREATE TABLE tiposusuario (
    id        INTEGER NOT NULL,
    tipo      VARCHAR2(255),
    funciones VARCHAR2(4000)
);

ALTER TABLE tiposusuario ADD CONSTRAINT tiposusuario_pk PRIMARY KEY ( id );

CREATE TABLE usuarios (
    id_usuario      INTEGER NOT NULL,
    nombre          VARCHAR2(255),
    email           VARCHAR2(255),
    usuario         VARCHAR2(255),
    contrase√±a      VARCHAR2(255),
    tiposusuario_id INTEGER NOT NULL
);

ALTER TABLE usuarios ADD CONSTRAINT usuarios_pk PRIMARY KEY ( id_usuario );

ALTER TABLE bares
    ADD CONSTRAINT bares_servicios_fk FOREIGN KEY ( id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE bebidasbares
    ADD CONSTRAINT bebidasbares_bares_fk FOREIGN KEY ( bares_id_servicio )
        REFERENCES bares ( id_servicio );

ALTER TABLE consumos
    ADD CONSTRAINT consumos_entrada_fk FOREIGN KEY ( entrada_reservas_id_reserva )
        REFERENCES entradas ( reservas_id_reserva );

ALTER TABLE consumos
    ADD CONSTRAINT consumos_habitaciones_fk FOREIGN KEY ( habitaciones_nhabitacion )
        REFERENCES habitaciones ( nhabitacion );

ALTER TABLE consumos
    ADD CONSTRAINT consumos_servicios_fk FOREIGN KEY ( servicios_id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE entradas
    ADD CONSTRAINT entrada_reservas_fk FOREIGN KEY ( reservas_id_reserva )
        REFERENCES reservas ( id_reserva );

ALTER TABLE entradas
    ADD CONSTRAINT entrada_usuarios_fk FOREIGN KEY ( usuarios_id_usuario )
        REFERENCES usuarios ( id_usuario );

ALTER TABLE gimnasios
    ADD CONSTRAINT gimnasio_servicios_fk FOREIGN KEY ( id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE reservasservicio
    ADD CONSTRAINT habitacionservicio_fk FOREIGN KEY ( habitaciones_nhabitacion )
        REFERENCES habitaciones ( nhabitacion );

ALTER TABLE platos
    ADD CONSTRAINT platos_restaurante_fk FOREIGN KEY ( restaurante_id_servicio )
        REFERENCES restaurantes ( id_servicio );

ALTER TABLE productos
    ADD CONSTRAINT productos_supermercados_fk FOREIGN KEY ( supermercados_id_servicio )
        REFERENCES supermercados ( id_servicio );

ALTER TABLE reservas
    ADD CONSTRAINT reservas_habitaciones_fk FOREIGN KEY ( habitaciones_nhabitacion )
        REFERENCES habitaciones ( nhabitacion );

ALTER TABLE reservas
    ADD CONSTRAINT reservas_planes_fk FOREIGN KEY ( planes_nombre )
        REFERENCES planes ( nombre );

ALTER TABLE reservas
    ADD CONSTRAINT reservas_usuarios_fk FOREIGN KEY ( usuarios_id_usuario )
        REFERENCES usuarios ( id_usuario );

ALTER TABLE reservasservicio
    ADD CONSTRAINT reservaservicio_servicios_fk FOREIGN KEY ( servicios_id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE restaurantes
    ADD CONSTRAINT restaurante_servicios_fk FOREIGN KEY ( id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE salidas
    ADD CONSTRAINT salida_consumos_fk FOREIGN KEY ( consumos_id )
        REFERENCES consumos ( id );

ALTER TABLE salidas
    ADD CONSTRAINT salida_usuarios_fk FOREIGN KEY ( usuarios_id_usuario )
        REFERENCES usuarios ( id_usuario );

ALTER TABLE salones
    ADD CONSTRAINT salones_servicios_fk FOREIGN KEY ( id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE spas
    ADD CONSTRAINT spas_servicios_fk FOREIGN KEY ( id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE supermercados
    ADD CONSTRAINT supermercados_servicios_fk FOREIGN KEY ( id_servicio )
        REFERENCES servicios ( id_servicio );

ALTER TABLE habitaciones
    ADD CONSTRAINT tipohabitacion_fk FOREIGN KEY ( tipohabitacion )
        REFERENCES tiposhabitacion ( nombre );

ALTER TABLE usuarios
    ADD CONSTRAINT usuarios_tiposusuario_fk FOREIGN KEY ( tiposusuario_id )
        REFERENCES tiposusuario ( id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_bares BEFORE
    INSERT OR UPDATE OF id_servicio ON bares
    FOR EACH ROW
DECLARE
    d VARCHAR2(255);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        servicios a
    WHERE
        a.id_servicio = :new.id_servicio;

    IF ( d IS NULL OR d <> 'Bar' ) THEN
        raise_application_error(-20223, 'FK Bares_Servicios_FK in Table Bares violates Arc constraint on Table Servicios - discriminator column tipo doesn''t have value ''Bar'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_gimnasios BEFORE
    INSERT OR UPDATE OF id_servicio ON gimnasios
    FOR EACH ROW
DECLARE
    d VARCHAR2(255);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        servicios a
    WHERE
        a.id_servicio = :new.id_servicio;

    IF ( d IS NULL OR d <> 'Gimnasios' ) THEN
        raise_application_error(-20223, 'FK Gimnasio_Servicios_FK in Table Gimnasios violates Arc constraint on Table Servicios - discriminator column tipo doesn''t have value ''Gimnasios'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_supermercados BEFORE
    INSERT OR UPDATE OF id_servicio ON supermercados
    FOR EACH ROW
DECLARE
    d VARCHAR2(255);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        servicios a
    WHERE
        a.id_servicio = :new.id_servicio;

    IF ( d IS NULL OR d <> 'Supermercados' ) THEN
        raise_application_error(-20223, 'FK Supermercados_Servicios_FK in Table Supermercados violates Arc constraint on Table Servicios - discriminator column tipo doesn''t have value ''Supermercados'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_restaurantes BEFORE
    INSERT OR UPDATE OF id_servicio ON restaurantes
    FOR EACH ROW
DECLARE
    d VARCHAR2(255);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        servicios a
    WHERE
        a.id_servicio = :new.id_servicio;

    IF ( d IS NULL OR d <> 'Restaurantes' ) THEN
        raise_application_error(-20223, 'FK Restaurante_Servicios_FK in Table Restaurantes violates Arc constraint on Table Servicios - discriminator column tipo doesn''t have value ''Restaurantes'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_spas BEFORE
    INSERT OR UPDATE OF id_servicio ON spas
    FOR EACH ROW
DECLARE
    d VARCHAR2(255);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        servicios a
    WHERE
        a.id_servicio = :new.id_servicio;

    IF ( d IS NULL OR d <> 'Spas' ) THEN
        raise_application_error(-20223, 'FK Spas_Servicios_FK in Table Spas violates Arc constraint on Table Servicios - discriminator column tipo doesn''t have value ''Spas'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_salones BEFORE
    INSERT OR UPDATE OF id_servicio ON salones
    FOR EACH ROW
DECLARE
    d VARCHAR2(255);
BEGIN
    SELECT
        a.tipo
    INTO d
    FROM
        servicios a
    WHERE
        a.id_servicio = :new.id_servicio;

    IF ( d IS NULL OR d <> 'Salones' ) THEN
        raise_application_error(-20223, 'FK Salones_Servicios_FK in Table Salones violates Arc constraint on Table Servicios - discriminator column tipo doesn''t have value ''Salones'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             1
-- ALTER TABLE                             43
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
