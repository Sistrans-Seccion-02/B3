
-- Req 1
SELECT h.nHabitacion, sum(s.costoservicio) as tipohabitacion
FROM habitaciones h 
INNER JOIN consumos c ON(h.nHabitacion = c.nHabitacion)
RIGHT JOIN servicios s ON(c.idservicio = s.idservicio)
WHERE h.nHabitacion = 450
GROUP BY h.nHabitacion
ORDER BY h.nHabitacion;

create   index consumaHabitaciones on consumos(nHabitacion, idservicio);


-- Req 2
SELECT s.nombre, s.dtype, count(c.idconsumo)
FROM servicios s 
RIGHT JOIN consumos c ON(s.idservicio = c.idservicio)
GROUP BY s.nombre, s.dtype
ORDER BY count(c.idconsumo) DESC
FETCH FIRST 20 ROWS ONLY;

create index consumoServicios on consumos(idconsumo, idservicio);


-- Req 3
CREATE INDEX RESERVAS_INDICE ON RESERVAS(NHABITACION);
SELECT NHABITACION, COUNT()/(SELECT COUNT()
FROM RESERVAS) AS CANT_RESERVAS_HAB
FROM HABITACIONES 
NATURAL JOIN RESERVAS
GROUP BY NHABITACION;

--Req 4
SELECT s.nombre, s.dtype, s.costoservicio
FROM servicios s 
JOIN consumos c ON(s.idservicio = c.idservicio)
JOIN reservasservicio r ON(r.idservicio = s.idservicio)
WHERE (s.costoservicio < 100000
AND s.costoservicio > 60000)
AND
(c.nHabitacion = 105)
AND
(r.fecha > '04/10/2024' AND r.fecha < '10/12/2024'
)
GROUP BY s.nombre, s.dtype, s.costoservicio;

create index servhabit ON consumos(idservicio, nHabitacion);

-- Req 5
SELECT DISTINCT c.idconsumo, rs.fecha, u.idusuario, u.nombre
        FROM consumos c 
        JOIN reservas r ON (r.nhabitacion = c.nHabitacion) 
        JOIN servicios s ON (s.idservicio = c.idservicio) 
        JOIN reservasservicio rs ON (rs.idservicio = s.idservicio) 
        JOIN usuarios u ON (u.idusuario = r.idusuario) 
        WHERE u.idusuario = :id 
        AND TO_DATE(rs.fecha, 'MM/DD/YYYY') BETWEEN TO_DATE(:inicio, 'MM/DD/YYYY') AND TO_DATE(:fin, 'MM/DD/YYYY') 
        ORDER BY rs.fecha;


-- Req 6
--FECHAS CON MAYOR OCUPACION

SELECT FECHAENTRADA, COUNT (*) AS OCUPACION
FROM RESERVAS
GROUP BY FECHAENTRADA
ORDER BY OCUPACION DESC
FETCH FIRST 5 ROW ONLY;

--FECHAS CON MAYORES INGRESOS
CREATE INDEX CONSUMO_INDICE ON CONSUMOS(IDSERVICIO,IDENTRADA);
SELECT FECHAENTRADA, SUM(COSTOSERVICIO) AS INGRESOS
FROM CONSUMOS 
INNER JOIN SERVICIOS ON CONSUMOS.IDSERVICIO=SERVICIOS.IDSERVICIO
INNER JOIN ENTRADAS ON ENTRADAS.IDENTRADA=CONSUMOS.IDENTRADA
INNER JOIN RESERVAS ON RESERVAS.IDRESERVA=ENTRADAS.IDRESERVA
GROUP BY FECHAENTRADA
ORDER BY INGRESOS DESC
FETCH FIRST 5 ROW ONLY;

--FECHAS CON MENOR OCUPACION
SELECT FECHAENTRADA, COUNT (*) AS OCUPACION
FROM RESERVAS
GROUP BY FECHAENTRADA
ORDER BY OCUPACION ASC
FETCH FIRST 5 ROW ONLY;




-- Req 7
CREATE INDEX SERVICIOS_INDICE ON SERVICIOS(IDSERVICIO,COSTOSERVICIO);
CREATE INDEX SERVICIOS_INDICE1 ON SERVICIOS(COSTOSERVICIO);
CREATE INDEX RESERVAS_INDICE ON RESERVAS(IDRESERVA, FECHAENTRADA, FECHASALIDA);


SELECT DISTINCT RESERVAS.IDUSUARIO,SUM(SERVICIOS.COSTOSERVICIO) AS COSTO_CONSUMO, SUM(TO_DATE(FECHASALIDA, 'MM/DD/YYYY')-TO_DATE(FECHAENTRADA, 'MM/DD/YYYY')+2) AS DIAS
FROM CONSUMOS
NATURAL JOIN SERVICIOS
NATURAL JOIN ENTRADAS
INNER JOIN RESERVAS ON ENTRADAS.IDRESERVA=RESERVAS.IDRESERVA
GROUP BY RESERVAS.IDUSUARIO
HAVING SUM(SERVICIOS.COSTOSERVICIO)>15000 OR SUM(TO_DATE(FECHASALIDA, 'MM/DD/YYYY')-TO_DATE(FECHAENTRADA, 'MM/DD/YYYY')+2) >14;



-- Req 8
SELECT 
    r.IDSERVICIO, 
    TO_CHAR(TO_DATE(r.FECHA, 'MM/DD/YYYY'), 'IW') AS SEMANA, 
    TO_CHAR(TO_DATE(r.FECHA, 'MM/DD/YYYY'), 'YYYY') AS ANIO , 
    COUNT(r.IDRESERVASERVICIO) AS NUMERODERESERVAS 
    FROM RESERVASSERVICIO r 
    GROUP BY r.IDSERVICIO, TO_CHAR(TO_DATE(r.FECHA, 'MM/DD/YYYY'), 'IW'), TO_CHAR(TO_DATE(r.FECHA, 'MM/DD/YYYY'), 'YYYY') 
    HAVING COUNT(r.IDRESERVASERVICIO) < 10 
    ORDER BY TO_CHAR(TO_DATE(r.FECHA, 'MM/DD/YYYY'), 'YYYY'), TO_CHAR(TO_DATE(r.FECHA, 'MM/DD/YYYY'), 'IW');
    
-- Req 9
SELECT u.nombre, COUNT(u.idusuario)
FROM reservas r
INNER JOIN usuarios u ON (r.idusuario = u.idusuario)
INNER JOIN consumos c ON(c.nHabitacion = r.nHabitacion)
INNER JOIN reservasservicio rs ON(rs.nHabitacion = r.nHabitacion)
WHERE c.idservicio = 10
AND rs.idservicio = 10
AND (rs.fecha < '02/05/2024' and rs.fecha > '01/05/2024')
GROUP BY u.nombre
ORDER BY COUNT(u.idusuario) DESC;

SELECT * FROM reservasservicio;

create index reservaHabit ON reservasservicio(idservicio, nHabitacion);
    
    
-- Req 10
SELECT u.idusuario, u.nombre, u.email 
        FROM usuarios u 
        WHERE u.idusuario NOT IN (
            SELECT r.idusuario 
            FROM consumos c 
            JOIN reservas r ON r.nHabitacion = c.nHabitacion 
            JOIN servicios s ON s.idservicio = c.idservicio 
            JOIN reservasservicio rs ON rs.idservicio = s.idservicio 
            WHERE s.idservicio = :id AND (rs.fecha > :inicio AND rs.fecha < :fin));


-- Req 11

--SERVICIO CON MAYOR CANTIDAD DE SOLICITUDES
SELECT TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW') AS SEMANA, S.IDSERVICIO , COUNT(S.IDSERVICIO) AS SOLICITUDES_SERVICIO, SUM(COSTOSERVICIO) AS CONSUMO
FROM RESERVAS R
INNER JOIN ENTRADAS E ON R.IDRESERVA=E.IDRESERVA
INNER JOIN CONSUMOS C ON C.IDENTRADA=E.IDENTRADA
INNER JOIN SERVICIOS S ON S.IDSERVICIO=C.IDSERVICIO
WHERE TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW')=1
GROUP BY TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW'), S.IDSERVICIO
ORDER BY COUNT(S.IDSERVICIO) DESC
FETCH FIRST 1 ROW ONLY;

--SERVICIO CON MENOR CANTIDAD DE SOLICITUDES
SELECT TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW') AS SEMANA, S.IDSERVICIO , COUNT(S.IDSERVICIO) AS SOLICITUDES_SERVICIO, SUM(COSTOSERVICIO) AS CONSUMO
FROM RESERVAS R
INNER JOIN ENTRADAS E ON R.IDRESERVA=E.IDRESERVA
INNER JOIN CONSUMOS C ON C.IDENTRADA=E.IDENTRADA
INNER JOIN SERVICIOS S ON S.IDSERVICIO=C.IDSERVICIO
WHERE TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW')=1
GROUP BY TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW'), S.IDSERVICIO
ORDER BY COUNT(S.IDSERVICIO) ASC
FETCH FIRST 1 ROW ONLY;

----HABITACION CON MAYOR CANTIDAD DE SOLICITUDES
SELECT TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW') AS SEMANA, R.NHABITACION, COUNT(R.NHABITACION) AS CANTIDAD_HABITACION
FROM RESERVAS R
WHERE TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW')=52
GROUP BY TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW'), R.NHABITACION
ORDER BY COUNT(R.NHABITACION) DESC
FETCH FIRST 1 ROW ONLY; 


----HABITACION CON MENOR CANTIDAD DE SOLICITUDES
SELECT TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW') AS SEMANA, R.NHABITACION, COUNT(R.NHABITACION) AS CANTIDAD_HABITACION
FROM RESERVAS R
WHERE TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW')=52
GROUP BY TO_CHAR(TO_DATE(FECHAENTRADA, 'MM/DD/YYYY'), 'WW'), R.NHABITACION
ORDER BY COUNT(R.NHABITACION) ASC
FETCH FIRST 1 ROW ONLY;


-- Req 12
SELECT r.IDUSUARIO AS id_cliente, 
    TO_CHAR(TO_DATE(r.FECHAENTRADA, 'MM/DD/YYYY'), 'YYYY') AS year, 
    COUNT(DISTINCT TO_CHAR(TO_DATE(r.FECHAENTRADA, 'MM/DD/YYYY'), 'Q')) AS distintos_trimestres, 
    COUNT(*) AS numero_de_entradas 
    FROM RESERVAS r JOIN ENTRADAS e ON r.IDRESERVA = e.IDRESERVA 
    GROUP BY r.IDUSUARIO, TO_CHAR(TO_DATE(r.FECHAENTRADA, 'MM/DD/YYYY'), 'YYYY') 
    HAVING COUNT(DISTINCT TO_CHAR(TO_DATE(r.FECHAENTRADA, 'MM/DD/YYYY'), 'Q')) = 4 
    ORDER BY id_cliente, year;
